

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sun Aug 18 10:11:04 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16LF877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14     0000                     
    15                           ; Generated 22/03/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16LF877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49     0000                     	;# 
    50     0001                     	;# 
    51     0002                     	;# 
    52     0003                     	;# 
    53     0004                     	;# 
    54     0005                     	;# 
    55     0006                     	;# 
    56     0007                     	;# 
    57     0008                     	;# 
    58     0009                     	;# 
    59     000A                     	;# 
    60     000B                     	;# 
    61     000C                     	;# 
    62     000D                     	;# 
    63     000E                     	;# 
    64     000E                     	;# 
    65     000F                     	;# 
    66     0010                     	;# 
    67     0011                     	;# 
    68     0012                     	;# 
    69     0013                     	;# 
    70     0014                     	;# 
    71     0015                     	;# 
    72     0015                     	;# 
    73     0016                     	;# 
    74     0017                     	;# 
    75     0018                     	;# 
    76     0019                     	;# 
    77     001A                     	;# 
    78     001B                     	;# 
    79     001B                     	;# 
    80     001C                     	;# 
    81     001D                     	;# 
    82     001E                     	;# 
    83     001F                     	;# 
    84     0081                     	;# 
    85     0085                     	;# 
    86     0086                     	;# 
    87     0087                     	;# 
    88     0088                     	;# 
    89     0089                     	;# 
    90     008C                     	;# 
    91     008D                     	;# 
    92     008E                     	;# 
    93     0091                     	;# 
    94     0092                     	;# 
    95     0093                     	;# 
    96     0094                     	;# 
    97     0098                     	;# 
    98     0099                     	;# 
    99     009C                     	;# 
   100     009D                     	;# 
   101     009E                     	;# 
   102     009F                     	;# 
   103     010C                     	;# 
   104     010D                     	;# 
   105     010E                     	;# 
   106     010F                     	;# 
   107     018C                     	;# 
   108     018D                     	;# 
   109     0000                     	;# 
   110     0001                     	;# 
   111     0002                     	;# 
   112     0003                     	;# 
   113     0004                     	;# 
   114     0005                     	;# 
   115     0006                     	;# 
   116     0007                     	;# 
   117     0008                     	;# 
   118     0009                     	;# 
   119     000A                     	;# 
   120     000B                     	;# 
   121     000C                     	;# 
   122     000D                     	;# 
   123     000E                     	;# 
   124     000E                     	;# 
   125     000F                     	;# 
   126     0010                     	;# 
   127     0011                     	;# 
   128     0012                     	;# 
   129     0013                     	;# 
   130     0014                     	;# 
   131     0015                     	;# 
   132     0015                     	;# 
   133     0016                     	;# 
   134     0017                     	;# 
   135     0018                     	;# 
   136     0019                     	;# 
   137     001A                     	;# 
   138     001B                     	;# 
   139     001B                     	;# 
   140     001C                     	;# 
   141     001D                     	;# 
   142     001E                     	;# 
   143     001F                     	;# 
   144     0081                     	;# 
   145     0085                     	;# 
   146     0086                     	;# 
   147     0087                     	;# 
   148     0088                     	;# 
   149     0089                     	;# 
   150     008C                     	;# 
   151     008D                     	;# 
   152     008E                     	;# 
   153     0091                     	;# 
   154     0092                     	;# 
   155     0093                     	;# 
   156     0094                     	;# 
   157     0098                     	;# 
   158     0099                     	;# 
   159     009C                     	;# 
   160     009D                     	;# 
   161     009E                     	;# 
   162     009F                     	;# 
   163     010C                     	;# 
   164     010D                     	;# 
   165     010E                     	;# 
   166     010F                     	;# 
   167     018C                     	;# 
   168     018D                     	;# 
   169     0008                     _PORTDbits	set	8
   170     0007                     _PORTC	set	7
   171     0088                     _TRISD	set	136
   172     0087                     _TRISC	set	135
   173                           
   174                           	psect	strings
   175     0003                     __pstrings:
   176     0003                     stringtab:
   177     0003                     __stringtab:
   178     0003                     stringcode:	
   179                           ;	String table - string pointers are 1 byte each
   180                           
   181     0003                     stringdir:
   182     0003  3000               	movlw	high stringdir
   183     0004  008A               	movwf	10
   184     0005  0804               	movf	4,w
   185     0006  0A84               	incf	4,f
   186     0007  0782               	addwf	2,f
   187     0008                     __stringbase:
   188     0008  3400               	retlw	0
   189     0009                     __end_of__stringtab:
   190     0009                     STR_2:
   191     0009  3449               	retlw	73	;'I'
   192     000A  344C               	retlw	76	;'L'
   193     000B  344F               	retlw	79	;'O'
   194     000C  3456               	retlw	86	;'V'
   195     000D  3445               	retlw	69	;'E'
   196     000E  3459               	retlw	89	;'Y'
   197     000F  344F               	retlw	79	;'O'
   198     0010  3455               	retlw	85	;'U'
   199     0011  3400               	retlw	0
   200     0012                     STR_1:
   201     0012  3458               	retlw	88	;'X'
   202     0013  3475               	retlw	117	;'u'
   203     0014  3461               	retlw	97	;'a'
   204     0015  346E               	retlw	110	;'n'
   205     0016  3448               	retlw	72	;'H'
   206     0017  346F               	retlw	111	;'o'
   207     0018  3461               	retlw	97	;'a'
   208     0019  3469               	retlw	105	;'i'
   209     001A  3400               	retlw	0
   210                           
   211                           	psect	cinit
   212     07FC                     start_initialization:	
   213                           ; #config settings
   214                           
   215     07FC                     __initialization:
   216     07FC                     end_of_initialization:	
   217                           ;End of C runtime variable initialization code
   218                           
   219     07FC                     __end_of__initialization:
   220     07FC  0183               	clrf	3
   221     07FD  120A  118A  2FD7   	ljmp	_main	;jump to C main() function
   222                           
   223                           	psect	cstackCOMMON
   224     0070                     __pcstackCOMMON:
   225     0070                     ?_lcd_data:
   226     0070                     ??_lcd_data:	
   227                           ; 1 bytes @ 0x0
   228                           
   229     0070                     ?_lcd_command:	
   230                           ; 1 bytes @ 0x0
   231                           
   232     0070                     ??_lcd_command:	
   233                           ; 1 bytes @ 0x0
   234                           
   235     0070                     ?_lcd_string:	
   236                           ; 1 bytes @ 0x0
   237                           
   238     0070                     ?_lcd_initialise:	
   239                           ; 1 bytes @ 0x0
   240                           
   241     0070                     ?_main:	
   242                           ; 1 bytes @ 0x0
   243                           
   244                           
   245                           ; 1 bytes @ 0x0
   246     0070                     	ds	2
   247     0072                     lcd_data@data:
   248     0072                     lcd_command@cmd:	
   249                           ; 1 bytes @ 0x2
   250                           
   251                           
   252                           ; 1 bytes @ 0x2
   253     0072                     	ds	1
   254     0073                     ??_lcd_string:
   255     0073                     ??_lcd_initialise:	
   256                           ; 1 bytes @ 0x3
   257                           
   258     0073                     lcd_string@str:	
   259                           ; 1 bytes @ 0x3
   260                           
   261                           
   262                           ; 1 bytes @ 0x3
   263     0073                     	ds	2
   264     0075                     ??_main:
   265                           
   266                           	psect	maintext
   267     07D7                     __pmaintext:	
   268                           ; 1 bytes @ 0x5
   269 ;;
   270 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   271 ;;
   272 ;; *************** function _main *****************
   273 ;; Defined at:
   274 ;;		line 63 in file "lcd.c"
   275 ;; Parameters:    Size  Location     Type
   276 ;;		None
   277 ;; Auto vars:     Size  Location     Type
   278 ;;		None
   279 ;; Return value:  Size  Location     Type
   280 ;;                  1    wreg      void 
   281 ;; Registers used:
   282 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   283 ;; Tracked objects:
   284 ;;		On entry : B00/0
   285 ;;		On exit  : 0/0
   286 ;;		Unchanged: 0/0
   287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   288 ;;      Params:         0       0       0       0       0
   289 ;;      Locals:         0       0       0       0       0
   290 ;;      Temps:          0       0       0       0       0
   291 ;;      Totals:         0       0       0       0       0
   292 ;;Total ram usage:        0 bytes
   293 ;; Hardware stack levels required when called: 2
   294 ;; This function calls:
   295 ;;		_lcd_command
   296 ;;		_lcd_initialise
   297 ;;		_lcd_string
   298 ;; This function is called by:
   299 ;;		Startup code after reset
   300 ;; This function uses a non-reentrant model
   301 ;;
   302                           
   303     07D7                     _main:	
   304                           ;psect for function _main
   305                           
   306     07D7                     l629:	
   307                           ;incstack = 0
   308                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   309                           
   310                           
   311                           ;lcd.c: 64:     TRISC = 0x00;
   312     07D7  1683               	bsf	3,5	;RP0=1, select bank1
   313     07D8  1303               	bcf	3,6	;RP1=0, select bank1
   314     07D9  0187               	clrf	7	;volatile
   315                           
   316                           ;lcd.c: 65:     TRISD = 0x00;
   317     07DA  0188               	clrf	8	;volatile
   318     07DB                     l631:
   319                           
   320                           ;lcd.c: 67:     lcd_initialise();
   321     07DB  120A  118A  27B5  120A  118A  	fcall	_lcd_initialise
   322     07E0                     l633:
   323                           
   324                           ;lcd.c: 70:     {;lcd.c: 71:         lcd_command(0x83);
   325     07E0  3083               	movlw	131
   326     07E1  120A  118A  276C  120A  118A  	fcall	_lcd_command
   327     07E6                     l635:
   328                           
   329                           ;lcd.c: 72:         lcd_string("XuanHoai");
   330     07E6  300A               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   331     07E7  120A  118A  2796  120A  118A  	fcall	_lcd_string
   332     07EC                     l637:
   333                           
   334                           ;lcd.c: 74:         lcd_command(0xC3);
   335     07EC  30C3               	movlw	195
   336     07ED  120A  118A  276C  120A  118A  	fcall	_lcd_command
   337     07F2                     l639:
   338                           
   339                           ;lcd.c: 75:         lcd_string("ILOVEYOU");
   340     07F2  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   341     07F3  120A  118A  2796  120A  118A  	fcall	_lcd_string
   342     07F8  2FE0               	goto	l633
   343     07F9  120A  118A  2800   	ljmp	start
   344     07FC                     __end_of_main:
   345                           
   346                           	psect	text1
   347     0796                     __ptext1:	
   348 ;; *************** function _lcd_string *****************
   349 ;; Defined at:
   350 ;;		line 46 in file "lcd.c"
   351 ;; Parameters:    Size  Location     Type
   352 ;;  str             1    wreg     PTR const unsigned char 
   353 ;;		 -> STR_2(9), STR_1(9), 
   354 ;; Auto vars:     Size  Location     Type
   355 ;;  str             1    3[COMMON] PTR const unsigned char 
   356 ;;		 -> STR_2(9), STR_1(9), 
   357 ;; Return value:  Size  Location     Type
   358 ;;                  1    wreg      void 
   359 ;; Registers used:
   360 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   361 ;; Tracked objects:
   362 ;;		On entry : 0/0
   363 ;;		On exit  : 0/0
   364 ;;		Unchanged: 0/0
   365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   366 ;;      Params:         0       0       0       0       0
   367 ;;      Locals:         1       0       0       0       0
   368 ;;      Temps:          0       0       0       0       0
   369 ;;      Totals:         1       0       0       0       0
   370 ;;Total ram usage:        1 bytes
   371 ;; Hardware stack levels used: 1
   372 ;; Hardware stack levels required when called: 1
   373 ;; This function calls:
   374 ;;		_lcd_data
   375 ;; This function is called by:
   376 ;;		_main
   377 ;; This function uses a non-reentrant model
   378 ;;
   379                           
   380     0796                     _lcd_string:	
   381                           ;psect for function _lcd_string
   382                           
   383                           
   384                           ;incstack = 0
   385                           ; Regs used in _lcd_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   386                           ;lcd_string@str stored from wreg
   387     0796  00F3               	movwf	lcd_string@str
   388     0797                     l621:
   389                           
   390                           ;lcd.c: 46: void lcd_string(const unsigned char *str);lcd.c: 47: {;lcd.c: 48:     while(
      +                          *str)
   391     0797  2FA8               	goto	l627
   392     0798                     l623:
   393                           
   394                           ;lcd.c: 49:     {;lcd.c: 50:         lcd_data(*str++);
   395     0798  0873               	movf	lcd_string@str,w
   396     0799  0084               	movwf	4
   397     079A  120A  118A  2003  120A  118A  	fcall	stringdir
   398     079F  120A  118A  2781  120A  118A  	fcall	_lcd_data
   399     07A4                     l625:
   400     07A4  3001               	movlw	1
   401     07A5  00FF               	movwf	btemp+1
   402     07A6  087F               	movf	btemp+1,w
   403     07A7  07F3               	addwf	lcd_string@str,f
   404     07A8                     l627:
   405                           
   406                           ;lcd.c: 48:     while(*str)
   407     07A8  0873               	movf	lcd_string@str,w
   408     07A9  0084               	movwf	4
   409     07AA  120A  118A  2003  120A  118A  	fcall	stringdir
   410     07AF  3A00               	xorlw	0
   411     07B0  1D03               	skipz
   412     07B1  2FB3               	goto	u21
   413     07B2  2FB4               	goto	u20
   414     07B3                     u21:
   415     07B3  2F98               	goto	l623
   416     07B4                     u20:
   417     07B4                     l22:
   418     07B4  0008               	return
   419     07B5                     __end_of_lcd_string:
   420                           
   421                           	psect	text2
   422     0781                     __ptext2:	
   423 ;; *************** function _lcd_data *****************
   424 ;; Defined at:
   425 ;;		line 26 in file "lcd.c"
   426 ;; Parameters:    Size  Location     Type
   427 ;;  data            1    wreg     unsigned char 
   428 ;; Auto vars:     Size  Location     Type
   429 ;;  data            1    2[COMMON] unsigned char 
   430 ;; Return value:  Size  Location     Type
   431 ;;                  1    wreg      void 
   432 ;; Registers used:
   433 ;;		wreg
   434 ;; Tracked objects:
   435 ;;		On entry : 0/0
   436 ;;		On exit  : 0/0
   437 ;;		Unchanged: 0/0
   438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   439 ;;      Params:         0       0       0       0       0
   440 ;;      Locals:         1       0       0       0       0
   441 ;;      Temps:          2       0       0       0       0
   442 ;;      Totals:         3       0       0       0       0
   443 ;;Total ram usage:        3 bytes
   444 ;; Hardware stack levels used: 1
   445 ;; This function calls:
   446 ;;		Nothing
   447 ;; This function is called by:
   448 ;;		_lcd_string
   449 ;; This function uses a non-reentrant model
   450 ;;
   451                           
   452     0781                     _lcd_data:	
   453                           ;psect for function _lcd_data
   454                           
   455                           
   456                           ;incstack = 0
   457                           ; Regs used in _lcd_data: [wreg]
   458                           ;lcd_data@data stored from wreg
   459     0781  00F2               	movwf	lcd_data@data
   460     0782                     l577:
   461                           
   462                           ;lcd.c: 26: void lcd_data(unsigned char data);lcd.c: 27: {;lcd.c: 28:     PORTC = data;
   463     0782  0872               	movf	lcd_data@data,w
   464     0783  1283               	bcf	3,5	;RP0=0, select bank0
   465     0784  1303               	bcf	3,6	;RP1=0, select bank0
   466     0785  0087               	movwf	7	;volatile
   467     0786                     l579:
   468                           
   469                           ;lcd.c: 29:     PORTDbits.RD0 = 1;
   470     0786  1408               	bsf	8,0	;volatile
   471     0787                     l581:
   472                           
   473                           ;lcd.c: 30:     PORTDbits.RD1 = 0;
   474     0787  1088               	bcf	8,1	;volatile
   475     0788                     l583:
   476                           
   477                           ;lcd.c: 31:     PORTDbits.RD2 = 1;
   478     0788  1508               	bsf	8,2	;volatile
   479                           
   480                           ;lcd.c: 32:     _delay((unsigned long)((5)*(20000000/4000.0)));
   481     0789  3021               	movlw	33
   482     078A  00F1               	movwf	??_lcd_data+1
   483     078B  3076               	movlw	118
   484     078C  00F0               	movwf	??_lcd_data
   485     078D                     u37:
   486     078D  0BF0               	decfsz	??_lcd_data,f
   487     078E  2F8D               	goto	u37
   488     078F  0BF1               	decfsz	??_lcd_data+1,f
   489     0790  2F8D               	goto	u37
   490     0791  0000               	nop
   491     0792                     l585:
   492                           
   493                           ;lcd.c: 33:     PORTDbits.RD2 = 0;
   494     0792  1283               	bcf	3,5	;RP0=0, select bank0
   495     0793  1303               	bcf	3,6	;RP1=0, select bank0
   496     0794  1108               	bcf	8,2	;volatile
   497     0795                     l13:
   498     0795  0008               	return
   499     0796                     __end_of_lcd_data:
   500                           
   501                           	psect	text3
   502     07B5                     __ptext3:	
   503 ;; *************** function _lcd_initialise *****************
   504 ;; Defined at:
   505 ;;		line 54 in file "lcd.c"
   506 ;; Parameters:    Size  Location     Type
   507 ;;		None
   508 ;; Auto vars:     Size  Location     Type
   509 ;;		None
   510 ;; Return value:  Size  Location     Type
   511 ;;                  1    wreg      void 
   512 ;; Registers used:
   513 ;;		wreg, status,2, status,0, pclath, cstack
   514 ;; Tracked objects:
   515 ;;		On entry : 0/0
   516 ;;		On exit  : 0/0
   517 ;;		Unchanged: 0/0
   518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   519 ;;      Params:         0       0       0       0       0
   520 ;;      Locals:         0       0       0       0       0
   521 ;;      Temps:          2       0       0       0       0
   522 ;;      Totals:         2       0       0       0       0
   523 ;;Total ram usage:        2 bytes
   524 ;; Hardware stack levels used: 1
   525 ;; Hardware stack levels required when called: 1
   526 ;; This function calls:
   527 ;;		_lcd_command
   528 ;; This function is called by:
   529 ;;		_main
   530 ;; This function uses a non-reentrant model
   531 ;;
   532                           
   533     07B5                     _lcd_initialise:	
   534                           ;psect for function _lcd_initialise
   535                           
   536     07B5                     l605:	
   537                           ;incstack = 0
   538                           ; Regs used in _lcd_initialise: [wreg+status,2+status,0+pclath+cstack]
   539                           
   540                           
   541                           ;lcd.c: 56:     lcd_command(0x38);
   542     07B5  3038               	movlw	56
   543     07B6  120A  118A  276C  120A  118A  	fcall	_lcd_command
   544                           
   545                           ;lcd.c: 57:     lcd_command(0x06);
   546     07BB  3006               	movlw	6
   547     07BC  120A  118A  276C  120A  118A  	fcall	_lcd_command
   548                           
   549                           ;lcd.c: 58:     lcd_command(0x0C);
   550     07C1  300C               	movlw	12
   551     07C2  120A  118A  276C  120A  118A  	fcall	_lcd_command
   552                           
   553                           ;lcd.c: 59:     lcd_command(0x01);
   554     07C7  3001               	movlw	1
   555     07C8  120A  118A  276C  120A  118A  	fcall	_lcd_command
   556     07CD                     l607:
   557                           
   558                           ;lcd.c: 60:     _delay((unsigned long)((2)*(20000000/4000.0)));
   559     07CD  300D               	movlw	13
   560     07CE  00F4               	movwf	??_lcd_initialise+1
   561     07CF  30FB               	movlw	251
   562     07D0  00F3               	movwf	??_lcd_initialise
   563     07D1                     u47:
   564     07D1  0BF3               	decfsz	??_lcd_initialise,f
   565     07D2  2FD1               	goto	u47
   566     07D3  0BF4               	decfsz	??_lcd_initialise+1,f
   567     07D4  2FD1               	goto	u47
   568     07D5  2FD6               	nop2
   569     07D6                     l25:
   570     07D6  0008               	return
   571     07D7                     __end_of_lcd_initialise:
   572                           
   573                           	psect	text4
   574     076C                     __ptext4:	
   575 ;; *************** function _lcd_command *****************
   576 ;; Defined at:
   577 ;;		line 36 in file "lcd.c"
   578 ;; Parameters:    Size  Location     Type
   579 ;;  cmd             1    wreg     unsigned char 
   580 ;; Auto vars:     Size  Location     Type
   581 ;;  cmd             1    2[COMMON] unsigned char 
   582 ;; Return value:  Size  Location     Type
   583 ;;                  1    wreg      void 
   584 ;; Registers used:
   585 ;;		wreg
   586 ;; Tracked objects:
   587 ;;		On entry : 0/0
   588 ;;		On exit  : 0/0
   589 ;;		Unchanged: 0/0
   590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   591 ;;      Params:         0       0       0       0       0
   592 ;;      Locals:         1       0       0       0       0
   593 ;;      Temps:          2       0       0       0       0
   594 ;;      Totals:         3       0       0       0       0
   595 ;;Total ram usage:        3 bytes
   596 ;; Hardware stack levels used: 1
   597 ;; This function calls:
   598 ;;		Nothing
   599 ;; This function is called by:
   600 ;;		_lcd_initialise
   601 ;;		_main
   602 ;; This function uses a non-reentrant model
   603 ;;
   604                           
   605     076C                     _lcd_command:	
   606                           ;psect for function _lcd_command
   607                           
   608                           
   609                           ;incstack = 0
   610                           ; Regs used in _lcd_command: [wreg]
   611                           ;lcd_command@cmd stored from wreg
   612     076C  00F2               	movwf	lcd_command@cmd
   613     076D                     l587:
   614                           
   615                           ;lcd.c: 36: void lcd_command(unsigned char cmd);lcd.c: 37: {;lcd.c: 38:     PORTC = cmd;
   616     076D  0872               	movf	lcd_command@cmd,w
   617     076E  1283               	bcf	3,5	;RP0=0, select bank0
   618     076F  1303               	bcf	3,6	;RP1=0, select bank0
   619     0770  0087               	movwf	7	;volatile
   620     0771                     l589:
   621                           
   622                           ;lcd.c: 39:     PORTDbits.RD0 = 0;
   623     0771  1008               	bcf	8,0	;volatile
   624     0772                     l591:
   625                           
   626                           ;lcd.c: 40:     PORTDbits.RD1 = 0;
   627     0772  1088               	bcf	8,1	;volatile
   628     0773                     l593:
   629                           
   630                           ;lcd.c: 41:     PORTDbits.RD2 = 1;
   631     0773  1508               	bsf	8,2	;volatile
   632                           
   633                           ;lcd.c: 42:     _delay((unsigned long)((5)*(20000000/4000.0)));
   634     0774  3021               	movlw	33
   635     0775  00F1               	movwf	??_lcd_command+1
   636     0776  3076               	movlw	118
   637     0777  00F0               	movwf	??_lcd_command
   638     0778                     u57:
   639     0778  0BF0               	decfsz	??_lcd_command,f
   640     0779  2F78               	goto	u57
   641     077A  0BF1               	decfsz	??_lcd_command+1,f
   642     077B  2F78               	goto	u57
   643     077C  0000               	nop
   644     077D                     l595:
   645                           
   646                           ;lcd.c: 43:     PORTDbits.RD2 = 0;
   647     077D  1283               	bcf	3,5	;RP0=0, select bank0
   648     077E  1303               	bcf	3,6	;RP1=0, select bank0
   649     077F  1108               	bcf	8,2	;volatile
   650     0780                     l16:
   651     0780  0008               	return
   652     0781                     __end_of_lcd_command:
   653     007E                     btemp	set	126	;btemp
   654     007E                     wtemp0	set	126
   655                           
   656                           	psect	config
   657                           
   658                           ;Config register CONFIG @ 0x2007
   659                           ;	Oscillator Selection bits
   660                           ;	FOSC = HS, HS oscillator
   661                           ;	Watchdog Timer Enable bit
   662                           ;	WDTE = OFF, WDT disabled
   663                           ;	Power-up Timer Enable bit
   664                           ;	PWRTE = OFF, PWRT disabled
   665                           ;	Brown-out Reset Enable bit
   666                           ;	BOREN = OFF, BOR disabled
   667                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   668                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   669                           ;	Data EEPROM Memory Code Protection bit
   670                           ;	CPD = OFF, Data EEPROM code protection off
   671                           ;	Flash Program Memory Write Enable bits
   672                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   673                           ;	In-Circuit Debugger Mode bit
   674                           ;	DEBUG = 0x1, unprogrammed default
   675                           ;	Flash Program Memory Code Protection bit
   676                           ;	CP = OFF, Code protection off
   677     2007                     	org	8199
   678     2007  3FBA               	dw	16314

Data Sizes:
    Strings     18
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_string@str	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_1(CODE[9]), STR_2(CODE[9]), 


Critical Paths under _main in COMMON

    _main->_lcd_initialise
    _lcd_string->_lcd_data
    _lcd_initialise->_lcd_command

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     156
                        _lcd_command
                     _lcd_initialise
                         _lcd_string
 ---------------------------------------------------------------------------------
 (1) _lcd_string                                           1     1      0     126
                                              3 COMMON     1     1      0
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd_initialise                                       2     2      0      15
                                              3 COMMON     2     2      0
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _lcd_command                                          3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_command
   _lcd_initialise
     _lcd_command
   _lcd_string
     _lcd_data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sun Aug 18 10:11:04 2024

                      pc 0002             lcd_data@data 0072                       l13 0795  
                     l22 07B4                       l16 0780                       l25 07D6  
                     u20 07B4                       u21 07B3                       u37 078D  
                     u47 07D1                       u57 0778                       fsr 0004  
                    l605 07B5                      l621 0797                      l607 07CD  
                    l623 0798                      l631 07DB                      l625 07A4  
                    l633 07E0                      l627 07A8                      l635 07E6  
                    l581 0787                      l637 07EC                      l629 07D7  
                    l591 0772                      l583 0788                      l639 07F2  
                    l593 0773                      l585 0792                      l577 0782  
                    l595 077D                      l587 076D                      l579 0786  
                    l589 0771                      fsr0 0004                     STR_1 0012  
                   STR_2 0009                     _main 07D7                     btemp 007E  
                   start 0000                    ?_main 0070                    _PORTC 0007  
                  _TRISC 0087                    _TRISD 0088                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 07FC                   ??_main 0075           lcd_command@cmd 0072  
       __end_of_lcd_data 0796         ??_lcd_initialise 0073            lcd_string@str 0073  
__end_of__initialization 07FC           __pcstackCOMMON 0070               __pmaintext 07D7  
              ?_lcd_data 0070               _lcd_string 0796               __stringtab 0003  
                __ptext1 0796                  __ptext2 0781                  __ptext3 07B5  
                __ptext4 076C               ??_lcd_data 0070     end_of_initialization 07FC  
              _PORTDbits 0008              ?_lcd_string 0070            ??_lcd_command 0070  
    start_initialization 07FC      __end_of_lcd_command 0781                ___latbits 0002  
              __pstrings 0003              _lcd_command 076C              __stringbase 0008  
           ??_lcd_string 0073       __end_of_lcd_string 07B5       __end_of__stringtab 0009  
               _lcd_data 0781           _lcd_initialise 07B5   __end_of_lcd_initialise 07D7  
              stringcode 0003                 stringdir 0003                 stringtab 0003  
        ?_lcd_initialise 0070             ?_lcd_command 0070  
