

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sun Aug 18 11:49:02 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15     0000                     
    16                           ; Generated 22/03/2023 GMT
    17                           ; 
    18                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F877A Definitions
    48                           ; 
    49                           ; SFR Addresses
    50     0000                     	;# 
    51     0001                     	;# 
    52     0002                     	;# 
    53     0003                     	;# 
    54     0004                     	;# 
    55     0005                     	;# 
    56     0006                     	;# 
    57     0007                     	;# 
    58     0008                     	;# 
    59     0009                     	;# 
    60     000A                     	;# 
    61     000B                     	;# 
    62     000C                     	;# 
    63     000D                     	;# 
    64     000E                     	;# 
    65     000E                     	;# 
    66     000F                     	;# 
    67     0010                     	;# 
    68     0011                     	;# 
    69     0012                     	;# 
    70     0013                     	;# 
    71     0014                     	;# 
    72     0015                     	;# 
    73     0015                     	;# 
    74     0016                     	;# 
    75     0017                     	;# 
    76     0018                     	;# 
    77     0019                     	;# 
    78     001A                     	;# 
    79     001B                     	;# 
    80     001B                     	;# 
    81     001C                     	;# 
    82     001D                     	;# 
    83     001E                     	;# 
    84     001F                     	;# 
    85     0081                     	;# 
    86     0085                     	;# 
    87     0086                     	;# 
    88     0087                     	;# 
    89     0088                     	;# 
    90     0089                     	;# 
    91     008C                     	;# 
    92     008D                     	;# 
    93     008E                     	;# 
    94     0091                     	;# 
    95     0092                     	;# 
    96     0093                     	;# 
    97     0094                     	;# 
    98     0098                     	;# 
    99     0099                     	;# 
   100     009C                     	;# 
   101     009D                     	;# 
   102     009E                     	;# 
   103     009F                     	;# 
   104     010C                     	;# 
   105     010D                     	;# 
   106     010E                     	;# 
   107     010F                     	;# 
   108     018C                     	;# 
   109     018D                     	;# 
   110     0000                     	;# 
   111     0001                     	;# 
   112     0002                     	;# 
   113     0003                     	;# 
   114     0004                     	;# 
   115     0005                     	;# 
   116     0006                     	;# 
   117     0007                     	;# 
   118     0008                     	;# 
   119     0009                     	;# 
   120     000A                     	;# 
   121     000B                     	;# 
   122     000C                     	;# 
   123     000D                     	;# 
   124     000E                     	;# 
   125     000E                     	;# 
   126     000F                     	;# 
   127     0010                     	;# 
   128     0011                     	;# 
   129     0012                     	;# 
   130     0013                     	;# 
   131     0014                     	;# 
   132     0015                     	;# 
   133     0015                     	;# 
   134     0016                     	;# 
   135     0017                     	;# 
   136     0018                     	;# 
   137     0019                     	;# 
   138     001A                     	;# 
   139     001B                     	;# 
   140     001B                     	;# 
   141     001C                     	;# 
   142     001D                     	;# 
   143     001E                     	;# 
   144     001F                     	;# 
   145     0081                     	;# 
   146     0085                     	;# 
   147     0086                     	;# 
   148     0087                     	;# 
   149     0088                     	;# 
   150     0089                     	;# 
   151     008C                     	;# 
   152     008D                     	;# 
   153     008E                     	;# 
   154     0091                     	;# 
   155     0092                     	;# 
   156     0093                     	;# 
   157     0094                     	;# 
   158     0098                     	;# 
   159     0099                     	;# 
   160     009C                     	;# 
   161     009D                     	;# 
   162     009E                     	;# 
   163     009F                     	;# 
   164     010C                     	;# 
   165     010D                     	;# 
   166     010E                     	;# 
   167     010F                     	;# 
   168     018C                     	;# 
   169     018D                     	;# 
   170     0006                     _PORTBbits	set	6
   171     0008                     _PORTDbits	set	8
   172     0007                     _PORTC	set	7
   173     0086                     _TRISB	set	134
   174     0088                     _TRISD	set	136
   175     0087                     _TRISC	set	135
   176                           
   177                           	psect	strings
   178     0003                     __pstrings:
   179     0003                     stringtab:
   180     0003                     __stringtab:
   181     0003                     stringcode:	
   182                           ;	String table - string pointers are 1 byte each
   183                           
   184     0003                     stringdir:
   185     0003  3000               	movlw	high stringdir
   186     0004  008A               	movwf	10
   187     0005  0804               	movf	4,w
   188     0006  0A84               	incf	4,f
   189     0007  0782               	addwf	2,f
   190     0008                     __stringbase:
   191     0008  3400               	retlw	0
   192     0009                     __end_of__stringtab:
   193     0009                     STR_1:
   194     0009  344B               	retlw	75	;'K'
   195     000A  3445               	retlw	69	;'E'
   196     000B  3459               	retlw	89	;'Y'
   197     000C  3450               	retlw	80	;'P'
   198     000D  3441               	retlw	65	;'A'
   199     000E  3444               	retlw	68	;'D'
   200     000F  343A               	retlw	58	;':'
   201     0010  3400               	retlw	0
   202                           
   203                           	psect	cinit
   204     07FC                     start_initialization:	
   205                           ; #config settings
   206                           
   207     07FC                     __initialization:
   208     07FC                     end_of_initialization:	
   209                           ;End of C runtime variable initialization code
   210                           
   211     07FC                     __end_of__initialization:
   212     07FC  0183               	clrf	3
   213     07FD  120A  118A  2F0A   	ljmp	_main	;jump to C main() function
   214                           
   215                           	psect	cstackCOMMON
   216     0070                     __pcstackCOMMON:
   217     0070                     ?_lcd_data:
   218     0070                     ??_lcd_data:	
   219                           ; 1 bytes @ 0x0
   220                           
   221     0070                     ?_lcd_command:	
   222                           ; 1 bytes @ 0x0
   223                           
   224     0070                     ??_lcd_command:	
   225                           ; 1 bytes @ 0x0
   226                           
   227     0070                     ?_lcd_string:	
   228                           ; 1 bytes @ 0x0
   229                           
   230     0070                     ?_lcd_initialise:	
   231                           ; 1 bytes @ 0x0
   232                           
   233     0070                     ?_keypad:	
   234                           ; 1 bytes @ 0x0
   235                           
   236     0070                     ?_main:	
   237                           ; 1 bytes @ 0x0
   238                           
   239                           
   240                           ; 1 bytes @ 0x0
   241     0070                     	ds	2
   242     0072                     lcd_data@data:
   243     0072                     lcd_command@cmd:	
   244                           ; 1 bytes @ 0x2
   245                           
   246                           
   247                           ; 1 bytes @ 0x2
   248     0072                     	ds	1
   249     0073                     ??_lcd_string:
   250     0073                     ??_lcd_initialise:	
   251                           ; 1 bytes @ 0x3
   252                           
   253     0073                     ??_keypad:	
   254                           ; 1 bytes @ 0x3
   255                           
   256     0073                     lcd_string@str:	
   257                           ; 1 bytes @ 0x3
   258                           
   259                           
   260                           ; 1 bytes @ 0x3
   261     0073                     	ds	2
   262     0075                     ??_main:
   263                           
   264                           	psect	maintext
   265     070A                     __pmaintext:	
   266                           ; 1 bytes @ 0x5
   267 ;;
   268 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   269 ;;
   270 ;; *************** function _main *****************
   271 ;; Defined at:
   272 ;;		line 134 in file "banphim.c"
   273 ;; Parameters:    Size  Location     Type
   274 ;;		None
   275 ;; Auto vars:     Size  Location     Type
   276 ;;		None
   277 ;; Return value:  Size  Location     Type
   278 ;;                  1    wreg      void 
   279 ;; Registers used:
   280 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   281 ;; Tracked objects:
   282 ;;		On entry : B00/0
   283 ;;		On exit  : 0/0
   284 ;;		Unchanged: 0/0
   285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   286 ;;      Params:         0       0       0       0       0
   287 ;;      Locals:         0       0       0       0       0
   288 ;;      Temps:          0       0       0       0       0
   289 ;;      Totals:         0       0       0       0       0
   290 ;;Total ram usage:        0 bytes
   291 ;; Hardware stack levels required when called: 2
   292 ;; This function calls:
   293 ;;		_keypad
   294 ;;		_lcd_command
   295 ;;		_lcd_initialise
   296 ;;		_lcd_string
   297 ;; This function is called by:
   298 ;;		Startup code after reset
   299 ;; This function uses a non-reentrant model
   300 ;;
   301                           
   302     070A                     _main:	
   303                           ;psect for function _main
   304                           
   305     070A                     l712:	
   306                           ;incstack = 0
   307                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   308                           
   309                           
   310                           ;banphim.c: 135:     TRISC = 0x00;
   311     070A  1683               	bsf	3,5	;RP0=1, select bank1
   312     070B  1303               	bcf	3,6	;RP1=0, select bank1
   313     070C  0187               	clrf	7	;volatile
   314                           
   315                           ;banphim.c: 136:     TRISD = 0x00;
   316     070D  0188               	clrf	8	;volatile
   317     070E                     l714:
   318                           
   319                           ;banphim.c: 137:     TRISB = 0xF0;
   320     070E  30F0               	movlw	240
   321     070F  0086               	movwf	6	;volatile
   322     0710                     l716:
   323                           
   324                           ;banphim.c: 139:     lcd_initialise();
   325     0710  120A  118A  26E8  120A  118A  	fcall	_lcd_initialise
   326     0715                     l718:
   327                           
   328                           ;banphim.c: 140:     lcd_command(0x80);
   329     0715  3080               	movlw	128
   330     0716  120A  118A  26B4  120A  118A  	fcall	_lcd_command
   331     071B                     l720:
   332                           
   333                           ;banphim.c: 141:     lcd_string("KEYPAD:");
   334     071B  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   335     071C  120A  118A  26C9  120A  118A  	fcall	_lcd_string
   336     0721                     l722:
   337                           
   338                           ;banphim.c: 142:     lcd_command(0xC0);
   339     0721  30C0               	movlw	192
   340     0722  120A  118A  26B4  120A  118A  	fcall	_lcd_command
   341     0727                     l724:
   342                           
   343                           ;banphim.c: 145:     {;banphim.c: 146:         keypad();
   344     0727  120A  118A  2730  120A  118A  	fcall	_keypad
   345     072C  2F27               	goto	l724
   346     072D  120A  118A  2800   	ljmp	start
   347     0730                     __end_of_main:
   348                           
   349                           	psect	text1
   350     06C9                     __ptext1:	
   351 ;; *************** function _lcd_string *****************
   352 ;; Defined at:
   353 ;;		line 59 in file "banphim.c"
   354 ;; Parameters:    Size  Location     Type
   355 ;;  str             1    wreg     PTR const unsigned char 
   356 ;;		 -> STR_1(8), 
   357 ;; Auto vars:     Size  Location     Type
   358 ;;  str             1    3[COMMON] PTR const unsigned char 
   359 ;;		 -> STR_1(8), 
   360 ;; Return value:  Size  Location     Type
   361 ;;                  1    wreg      void 
   362 ;; Registers used:
   363 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   364 ;; Tracked objects:
   365 ;;		On entry : 0/0
   366 ;;		On exit  : 0/0
   367 ;;		Unchanged: 0/0
   368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   369 ;;      Params:         0       0       0       0       0
   370 ;;      Locals:         1       0       0       0       0
   371 ;;      Temps:          0       0       0       0       0
   372 ;;      Totals:         1       0       0       0       0
   373 ;;Total ram usage:        1 bytes
   374 ;; Hardware stack levels used: 1
   375 ;; Hardware stack levels required when called: 1
   376 ;; This function calls:
   377 ;;		_lcd_data
   378 ;; This function is called by:
   379 ;;		_main
   380 ;; This function uses a non-reentrant model
   381 ;;
   382                           
   383     06C9                     _lcd_string:	
   384                           ;psect for function _lcd_string
   385                           
   386                           
   387                           ;incstack = 0
   388                           ; Regs used in _lcd_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   389                           ;lcd_string@str stored from wreg
   390     06C9  00F3               	movwf	lcd_string@str
   391     06CA                     l704:
   392                           
   393                           ;banphim.c: 59: void lcd_string(const unsigned char *str);banphim.c: 60: {;banphim.c: 61
      +                          :     while(*str)
   394     06CA  2EDB               	goto	l710
   395     06CB                     l706:
   396                           
   397                           ;banphim.c: 62:     {;banphim.c: 63:         lcd_data(*str++);
   398     06CB  0873               	movf	lcd_string@str,w
   399     06CC  0084               	movwf	4
   400     06CD  120A  118A  2003  120A  118A  	fcall	stringdir
   401     06D2  120A  118A  269F  120A  118A  	fcall	_lcd_data
   402     06D7                     l708:
   403     06D7  3001               	movlw	1
   404     06D8  00FF               	movwf	btemp+1
   405     06D9  087F               	movf	btemp+1,w
   406     06DA  07F3               	addwf	lcd_string@str,f
   407     06DB                     l710:
   408                           
   409                           ;banphim.c: 61:     while(*str)
   410     06DB  0873               	movf	lcd_string@str,w
   411     06DC  0084               	movwf	4
   412     06DD  120A  118A  2003  120A  118A  	fcall	stringdir
   413     06E2  3A00               	xorlw	0
   414     06E3  1D03               	skipz
   415     06E4  2EE6               	goto	u261
   416     06E5  2EE7               	goto	u260
   417     06E6                     u261:
   418     06E6  2ECB               	goto	l706
   419     06E7                     u260:
   420     06E7                     l26:
   421     06E7  0008               	return
   422     06E8                     __end_of_lcd_string:
   423                           
   424                           	psect	text2
   425     06E8                     __ptext2:	
   426 ;; *************** function _lcd_initialise *****************
   427 ;; Defined at:
   428 ;;		line 67 in file "banphim.c"
   429 ;; Parameters:    Size  Location     Type
   430 ;;		None
   431 ;; Auto vars:     Size  Location     Type
   432 ;;		None
   433 ;; Return value:  Size  Location     Type
   434 ;;                  1    wreg      void 
   435 ;; Registers used:
   436 ;;		wreg, status,2, status,0, pclath, cstack
   437 ;; Tracked objects:
   438 ;;		On entry : 0/0
   439 ;;		On exit  : 0/0
   440 ;;		Unchanged: 0/0
   441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   442 ;;      Params:         0       0       0       0       0
   443 ;;      Locals:         0       0       0       0       0
   444 ;;      Temps:          2       0       0       0       0
   445 ;;      Totals:         2       0       0       0       0
   446 ;;Total ram usage:        2 bytes
   447 ;; Hardware stack levels used: 1
   448 ;; Hardware stack levels required when called: 1
   449 ;; This function calls:
   450 ;;		_lcd_command
   451 ;; This function is called by:
   452 ;;		_main
   453 ;; This function uses a non-reentrant model
   454 ;;
   455                           
   456     06E8                     _lcd_initialise:	
   457                           ;psect for function _lcd_initialise
   458                           
   459     06E8                     l660:	
   460                           ;incstack = 0
   461                           ; Regs used in _lcd_initialise: [wreg+status,2+status,0+pclath+cstack]
   462                           
   463                           
   464                           ;banphim.c: 69:     lcd_command(0x38);
   465     06E8  3038               	movlw	56
   466     06E9  120A  118A  26B4  120A  118A  	fcall	_lcd_command
   467                           
   468                           ;banphim.c: 70:     lcd_command(0x06);
   469     06EE  3006               	movlw	6
   470     06EF  120A  118A  26B4  120A  118A  	fcall	_lcd_command
   471                           
   472                           ;banphim.c: 71:     lcd_command(0x0C);
   473     06F4  300C               	movlw	12
   474     06F5  120A  118A  26B4  120A  118A  	fcall	_lcd_command
   475                           
   476                           ;banphim.c: 72:     lcd_command(0x01);
   477     06FA  3001               	movlw	1
   478     06FB  120A  118A  26B4  120A  118A  	fcall	_lcd_command
   479     0700                     l662:
   480                           
   481                           ;banphim.c: 73:     _delay((unsigned long)((2)*(20000000/4000.0)));
   482     0700  300D               	movlw	13
   483     0701  00F4               	movwf	??_lcd_initialise+1
   484     0702  30FB               	movlw	251
   485     0703  00F3               	movwf	??_lcd_initialise
   486     0704                     u277:
   487     0704  0BF3               	decfsz	??_lcd_initialise,f
   488     0705  2F04               	goto	u277
   489     0706  0BF4               	decfsz	??_lcd_initialise+1,f
   490     0707  2F04               	goto	u277
   491     0708  2F09               	nop2
   492     0709                     l29:
   493     0709  0008               	return
   494     070A                     __end_of_lcd_initialise:
   495                           
   496                           	psect	text3
   497     06B4                     __ptext3:	
   498 ;; *************** function _lcd_command *****************
   499 ;; Defined at:
   500 ;;		line 49 in file "banphim.c"
   501 ;; Parameters:    Size  Location     Type
   502 ;;  cmd             1    wreg     unsigned char 
   503 ;; Auto vars:     Size  Location     Type
   504 ;;  cmd             1    2[COMMON] unsigned char 
   505 ;; Return value:  Size  Location     Type
   506 ;;                  1    wreg      void 
   507 ;; Registers used:
   508 ;;		wreg
   509 ;; Tracked objects:
   510 ;;		On entry : 0/0
   511 ;;		On exit  : 0/0
   512 ;;		Unchanged: 0/0
   513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   514 ;;      Params:         0       0       0       0       0
   515 ;;      Locals:         1       0       0       0       0
   516 ;;      Temps:          2       0       0       0       0
   517 ;;      Totals:         3       0       0       0       0
   518 ;;Total ram usage:        3 bytes
   519 ;; Hardware stack levels used: 1
   520 ;; This function calls:
   521 ;;		Nothing
   522 ;; This function is called by:
   523 ;;		_lcd_initialise
   524 ;;		_main
   525 ;; This function uses a non-reentrant model
   526 ;;
   527                           
   528     06B4                     _lcd_command:	
   529                           ;psect for function _lcd_command
   530                           
   531                           
   532                           ;incstack = 0
   533                           ; Regs used in _lcd_command: [wreg]
   534                           ;lcd_command@cmd stored from wreg
   535     06B4  00F2               	movwf	lcd_command@cmd
   536     06B5                     l642:
   537                           
   538                           ;banphim.c: 49: void lcd_command(unsigned char cmd);banphim.c: 50: {;banphim.c: 51:     
      +                          PORTC = cmd;
   539     06B5  0872               	movf	lcd_command@cmd,w
   540     06B6  1283               	bcf	3,5	;RP0=0, select bank0
   541     06B7  1303               	bcf	3,6	;RP1=0, select bank0
   542     06B8  0087               	movwf	7	;volatile
   543     06B9                     l644:
   544                           
   545                           ;banphim.c: 52:     PORTDbits.RD0 = 0;
   546     06B9  1008               	bcf	8,0	;volatile
   547     06BA                     l646:
   548                           
   549                           ;banphim.c: 53:     PORTDbits.RD1 = 0;
   550     06BA  1088               	bcf	8,1	;volatile
   551     06BB                     l648:
   552                           
   553                           ;banphim.c: 54:     PORTDbits.RD2 = 1;
   554     06BB  1508               	bsf	8,2	;volatile
   555                           
   556                           ;banphim.c: 55:     _delay((unsigned long)((5)*(20000000/4000.0)));
   557     06BC  3021               	movlw	33
   558     06BD  00F1               	movwf	??_lcd_command+1
   559     06BE  3076               	movlw	118
   560     06BF  00F0               	movwf	??_lcd_command
   561     06C0                     u287:
   562     06C0  0BF0               	decfsz	??_lcd_command,f
   563     06C1  2EC0               	goto	u287
   564     06C2  0BF1               	decfsz	??_lcd_command+1,f
   565     06C3  2EC0               	goto	u287
   566     06C4  0000               	nop
   567     06C5                     l650:
   568                           
   569                           ;banphim.c: 56:     PORTDbits.RD2 = 0;
   570     06C5  1283               	bcf	3,5	;RP0=0, select bank0
   571     06C6  1303               	bcf	3,6	;RP1=0, select bank0
   572     06C7  1108               	bcf	8,2	;volatile
   573     06C8                     l20:
   574     06C8  0008               	return
   575     06C9                     __end_of_lcd_command:
   576                           
   577                           	psect	text4
   578     0730                     __ptext4:	
   579 ;; *************** function _keypad *****************
   580 ;; Defined at:
   581 ;;		line 76 in file "banphim.c"
   582 ;; Parameters:    Size  Location     Type
   583 ;;		None
   584 ;; Auto vars:     Size  Location     Type
   585 ;;		None
   586 ;; Return value:  Size  Location     Type
   587 ;;                  1    wreg      void 
   588 ;; Registers used:
   589 ;;		wreg, status,2, status,0, pclath, cstack
   590 ;; Tracked objects:
   591 ;;		On entry : 0/0
   592 ;;		On exit  : 0/0
   593 ;;		Unchanged: 0/0
   594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   595 ;;      Params:         0       0       0       0       0
   596 ;;      Locals:         0       0       0       0       0
   597 ;;      Temps:          0       0       0       0       0
   598 ;;      Totals:         0       0       0       0       0
   599 ;;Total ram usage:        0 bytes
   600 ;; Hardware stack levels used: 1
   601 ;; Hardware stack levels required when called: 1
   602 ;; This function calls:
   603 ;;		_lcd_data
   604 ;; This function is called by:
   605 ;;		_main
   606 ;; This function uses a non-reentrant model
   607 ;;
   608                           
   609     0730                     _keypad:	
   610                           ;psect for function _keypad
   611                           
   612     0730                     l664:	
   613                           ;incstack = 0
   614                           ; Regs used in _keypad: [wreg+status,2+status,0+pclath+cstack]
   615                           
   616                           
   617                           ;banphim.c: 78:     PORTBbits.RB0 = 1; PORTBbits.RB1 = 0; PORTBbits.RB2 = 0;
   618     0730  1283               	bcf	3,5	;RP0=0, select bank0
   619     0731  1303               	bcf	3,6	;RP1=0, select bank0
   620     0732  1406               	bsf	6,0	;volatile
   621     0733  1086               	bcf	6,1	;volatile
   622     0734  1106               	bcf	6,2	;volatile
   623                           
   624                           ;banphim.c: 79:     if(PORTBbits.RB4 == 1){
   625     0735  1E06               	btfss	6,4	;volatile
   626     0736  2F38               	goto	u21
   627     0737  2F39               	goto	u20
   628     0738                     u21:
   629     0738  2F45               	goto	l32
   630     0739                     u20:
   631     0739                     l666:
   632                           
   633                           ;banphim.c: 80:         lcd_data('1');
   634     0739  3031               	movlw	49
   635     073A  120A  118A  269F  120A  118A  	fcall	_lcd_data
   636     073F                     l33:	
   637                           ;banphim.c: 81:         while(PORTBbits.RB4 == 1);
   638                           
   639     073F  1283               	bcf	3,5	;RP0=0, select bank0
   640     0740  1303               	bcf	3,6	;RP1=0, select bank0
   641     0741  1A06               	btfsc	6,4	;volatile
   642     0742  2F44               	goto	u31
   643     0743  2F45               	goto	u30
   644     0744                     u31:
   645     0744  2F3F               	goto	l33
   646     0745                     u30:
   647     0745                     l32:	
   648                           ;banphim.c: 82:     }
   649                           
   650                           
   651                           ;banphim.c: 83:     if(PORTBbits.RB5 == 1){
   652     0745  1E86               	btfss	6,5	;volatile
   653     0746  2F48               	goto	u41
   654     0747  2F49               	goto	u40
   655     0748                     u41:
   656     0748  2F55               	goto	l36
   657     0749                     u40:
   658     0749                     l668:
   659                           
   660                           ;banphim.c: 84:         lcd_data('4');
   661     0749  3034               	movlw	52
   662     074A  120A  118A  269F  120A  118A  	fcall	_lcd_data
   663     074F                     l37:	
   664                           ;banphim.c: 85:         while(PORTBbits.RB5 == 1);
   665                           
   666     074F  1283               	bcf	3,5	;RP0=0, select bank0
   667     0750  1303               	bcf	3,6	;RP1=0, select bank0
   668     0751  1A86               	btfsc	6,5	;volatile
   669     0752  2F54               	goto	u51
   670     0753  2F55               	goto	u50
   671     0754                     u51:
   672     0754  2F4F               	goto	l37
   673     0755                     u50:
   674     0755                     l36:	
   675                           ;banphim.c: 86:     }
   676                           
   677                           
   678                           ;banphim.c: 87:     if(PORTBbits.RB6 == 1){
   679     0755  1F06               	btfss	6,6	;volatile
   680     0756  2F58               	goto	u61
   681     0757  2F59               	goto	u60
   682     0758                     u61:
   683     0758  2F65               	goto	l40
   684     0759                     u60:
   685     0759                     l670:
   686                           
   687                           ;banphim.c: 88:         lcd_data('7');
   688     0759  3037               	movlw	55
   689     075A  120A  118A  269F  120A  118A  	fcall	_lcd_data
   690     075F                     l41:	
   691                           ;banphim.c: 89:         while(PORTBbits.RB6 == 1);
   692                           
   693     075F  1283               	bcf	3,5	;RP0=0, select bank0
   694     0760  1303               	bcf	3,6	;RP1=0, select bank0
   695     0761  1B06               	btfsc	6,6	;volatile
   696     0762  2F64               	goto	u71
   697     0763  2F65               	goto	u70
   698     0764                     u71:
   699     0764  2F5F               	goto	l41
   700     0765                     u70:
   701     0765                     l40:	
   702                           ;banphim.c: 90:     }
   703                           
   704                           
   705                           ;banphim.c: 91:     if(PORTBbits.RB7 == 1){
   706     0765  1F86               	btfss	6,7	;volatile
   707     0766  2F68               	goto	u81
   708     0767  2F69               	goto	u80
   709     0768                     u81:
   710     0768  2F75               	goto	l44
   711     0769                     u80:
   712     0769                     l672:
   713                           
   714                           ;banphim.c: 92:         lcd_data('*');
   715     0769  302A               	movlw	42
   716     076A  120A  118A  269F  120A  118A  	fcall	_lcd_data
   717     076F                     l45:	
   718                           ;banphim.c: 93:         while(PORTBbits.RB7 == 1);
   719                           
   720     076F  1283               	bcf	3,5	;RP0=0, select bank0
   721     0770  1303               	bcf	3,6	;RP1=0, select bank0
   722     0771  1B86               	btfsc	6,7	;volatile
   723     0772  2F74               	goto	u91
   724     0773  2F75               	goto	u90
   725     0774                     u91:
   726     0774  2F6F               	goto	l45
   727     0775                     u90:
   728     0775                     l44:	
   729                           ;banphim.c: 94:     }
   730                           
   731                           
   732                           ;banphim.c: 96:     PORTBbits.RB0 = 0; PORTBbits.RB1 = 1; PORTBbits.RB2 = 0;
   733     0775  1006               	bcf	6,0	;volatile
   734     0776  1486               	bsf	6,1	;volatile
   735     0777  1106               	bcf	6,2	;volatile
   736                           
   737                           ;banphim.c: 97:     if(PORTBbits.RB4 == 1){
   738     0778  1E06               	btfss	6,4	;volatile
   739     0779  2F7B               	goto	u101
   740     077A  2F7C               	goto	u100
   741     077B                     u101:
   742     077B  2F88               	goto	l48
   743     077C                     u100:
   744     077C                     l674:
   745                           
   746                           ;banphim.c: 98:         lcd_data('2');
   747     077C  3032               	movlw	50
   748     077D  120A  118A  269F  120A  118A  	fcall	_lcd_data
   749     0782                     l49:	
   750                           ;banphim.c: 99:         while(PORTBbits.RB4 == 1);
   751                           
   752     0782  1283               	bcf	3,5	;RP0=0, select bank0
   753     0783  1303               	bcf	3,6	;RP1=0, select bank0
   754     0784  1A06               	btfsc	6,4	;volatile
   755     0785  2F87               	goto	u111
   756     0786  2F88               	goto	u110
   757     0787                     u111:
   758     0787  2F82               	goto	l49
   759     0788                     u110:
   760     0788                     l48:	
   761                           ;banphim.c: 100:     }
   762                           
   763                           
   764                           ;banphim.c: 101:     if(PORTBbits.RB5 == 1){
   765     0788  1E86               	btfss	6,5	;volatile
   766     0789  2F8B               	goto	u121
   767     078A  2F8C               	goto	u120
   768     078B                     u121:
   769     078B  2F98               	goto	l52
   770     078C                     u120:
   771     078C                     l676:
   772                           
   773                           ;banphim.c: 102:         lcd_data('5');
   774     078C  3035               	movlw	53
   775     078D  120A  118A  269F  120A  118A  	fcall	_lcd_data
   776     0792                     l53:	
   777                           ;banphim.c: 103:         while(PORTBbits.RB5 == 1);
   778                           
   779     0792  1283               	bcf	3,5	;RP0=0, select bank0
   780     0793  1303               	bcf	3,6	;RP1=0, select bank0
   781     0794  1A86               	btfsc	6,5	;volatile
   782     0795  2F97               	goto	u131
   783     0796  2F98               	goto	u130
   784     0797                     u131:
   785     0797  2F92               	goto	l53
   786     0798                     u130:
   787     0798                     l52:	
   788                           ;banphim.c: 104:     }
   789                           
   790                           
   791                           ;banphim.c: 105:     if(PORTBbits.RB6 == 1){
   792     0798  1F06               	btfss	6,6	;volatile
   793     0799  2F9B               	goto	u141
   794     079A  2F9C               	goto	u140
   795     079B                     u141:
   796     079B  2FA8               	goto	l56
   797     079C                     u140:
   798     079C                     l678:
   799                           
   800                           ;banphim.c: 106:         lcd_data('8');
   801     079C  3038               	movlw	56
   802     079D  120A  118A  269F  120A  118A  	fcall	_lcd_data
   803     07A2                     l57:	
   804                           ;banphim.c: 107:         while(PORTBbits.RB6 == 1);
   805                           
   806     07A2  1283               	bcf	3,5	;RP0=0, select bank0
   807     07A3  1303               	bcf	3,6	;RP1=0, select bank0
   808     07A4  1B06               	btfsc	6,6	;volatile
   809     07A5  2FA7               	goto	u151
   810     07A6  2FA8               	goto	u150
   811     07A7                     u151:
   812     07A7  2FA2               	goto	l57
   813     07A8                     u150:
   814     07A8                     l56:	
   815                           ;banphim.c: 108:     }
   816                           
   817                           
   818                           ;banphim.c: 109:     if(PORTBbits.RB7 == 1){
   819     07A8  1F86               	btfss	6,7	;volatile
   820     07A9  2FAB               	goto	u161
   821     07AA  2FAC               	goto	u160
   822     07AB                     u161:
   823     07AB  2FB8               	goto	l60
   824     07AC                     u160:
   825     07AC                     l680:
   826                           
   827                           ;banphim.c: 110:         lcd_data('0');
   828     07AC  3030               	movlw	48
   829     07AD  120A  118A  269F  120A  118A  	fcall	_lcd_data
   830     07B2                     l61:	
   831                           ;banphim.c: 111:         while(PORTBbits.RB7 == 1);
   832                           
   833     07B2  1283               	bcf	3,5	;RP0=0, select bank0
   834     07B3  1303               	bcf	3,6	;RP1=0, select bank0
   835     07B4  1B86               	btfsc	6,7	;volatile
   836     07B5  2FB7               	goto	u171
   837     07B6  2FB8               	goto	u170
   838     07B7                     u171:
   839     07B7  2FB2               	goto	l61
   840     07B8                     u170:
   841     07B8                     l60:	
   842                           ;banphim.c: 112:     }
   843                           
   844                           
   845                           ;banphim.c: 114:     PORTBbits.RB0 = 0; PORTBbits.RB1 = 0; PORTBbits.RB2 = 1;
   846     07B8  1006               	bcf	6,0	;volatile
   847     07B9  1086               	bcf	6,1	;volatile
   848     07BA  1506               	bsf	6,2	;volatile
   849                           
   850                           ;banphim.c: 115:     if(PORTBbits.RB4 == 1){
   851     07BB  1E06               	btfss	6,4	;volatile
   852     07BC  2FBE               	goto	u181
   853     07BD  2FBF               	goto	u180
   854     07BE                     u181:
   855     07BE  2FCB               	goto	l64
   856     07BF                     u180:
   857     07BF                     l682:
   858                           
   859                           ;banphim.c: 116:         lcd_data('3');
   860     07BF  3033               	movlw	51
   861     07C0  120A  118A  269F  120A  118A  	fcall	_lcd_data
   862     07C5                     l65:	
   863                           ;banphim.c: 117:         while(PORTBbits.RB4 == 1);
   864                           
   865     07C5  1283               	bcf	3,5	;RP0=0, select bank0
   866     07C6  1303               	bcf	3,6	;RP1=0, select bank0
   867     07C7  1A06               	btfsc	6,4	;volatile
   868     07C8  2FCA               	goto	u191
   869     07C9  2FCB               	goto	u190
   870     07CA                     u191:
   871     07CA  2FC5               	goto	l65
   872     07CB                     u190:
   873     07CB                     l64:	
   874                           ;banphim.c: 118:     }
   875                           
   876                           
   877                           ;banphim.c: 119:     if(PORTBbits.RB5 == 1){
   878     07CB  1E86               	btfss	6,5	;volatile
   879     07CC  2FCE               	goto	u201
   880     07CD  2FCF               	goto	u200
   881     07CE                     u201:
   882     07CE  2FDB               	goto	l68
   883     07CF                     u200:
   884     07CF                     l684:
   885                           
   886                           ;banphim.c: 120:         lcd_data('6');
   887     07CF  3036               	movlw	54
   888     07D0  120A  118A  269F  120A  118A  	fcall	_lcd_data
   889     07D5                     l69:	
   890                           ;banphim.c: 121:         while(PORTBbits.RB5 == 1);
   891                           
   892     07D5  1283               	bcf	3,5	;RP0=0, select bank0
   893     07D6  1303               	bcf	3,6	;RP1=0, select bank0
   894     07D7  1A86               	btfsc	6,5	;volatile
   895     07D8  2FDA               	goto	u211
   896     07D9  2FDB               	goto	u210
   897     07DA                     u211:
   898     07DA  2FD5               	goto	l69
   899     07DB                     u210:
   900     07DB                     l68:	
   901                           ;banphim.c: 122:     }
   902                           
   903                           
   904                           ;banphim.c: 123:     if(PORTBbits.RB6 == 1){
   905     07DB  1F06               	btfss	6,6	;volatile
   906     07DC  2FDE               	goto	u221
   907     07DD  2FDF               	goto	u220
   908     07DE                     u221:
   909     07DE  2FEB               	goto	l72
   910     07DF                     u220:
   911     07DF                     l686:
   912                           
   913                           ;banphim.c: 124:         lcd_data('9');
   914     07DF  3039               	movlw	57
   915     07E0  120A  118A  269F  120A  118A  	fcall	_lcd_data
   916     07E5                     l73:	
   917                           ;banphim.c: 125:         while(PORTBbits.RB6 == 1);
   918                           
   919     07E5  1283               	bcf	3,5	;RP0=0, select bank0
   920     07E6  1303               	bcf	3,6	;RP1=0, select bank0
   921     07E7  1B06               	btfsc	6,6	;volatile
   922     07E8  2FEA               	goto	u231
   923     07E9  2FEB               	goto	u230
   924     07EA                     u231:
   925     07EA  2FE5               	goto	l73
   926     07EB                     u230:
   927     07EB                     l72:	
   928                           ;banphim.c: 126:     }
   929                           
   930                           
   931                           ;banphim.c: 127:     if(PORTBbits.RB7 == 1){
   932     07EB  1F86               	btfss	6,7	;volatile
   933     07EC  2FEE               	goto	u241
   934     07ED  2FEF               	goto	u240
   935     07EE                     u241:
   936     07EE  2FFB               	goto	l80
   937     07EF                     u240:
   938     07EF                     l688:
   939                           
   940                           ;banphim.c: 128:         lcd_data('#');
   941     07EF  3023               	movlw	35
   942     07F0  120A  118A  269F  120A  118A  	fcall	_lcd_data
   943     07F5                     l77:	
   944                           ;banphim.c: 129:         while(PORTBbits.RB7 == 1);
   945                           
   946     07F5  1283               	bcf	3,5	;RP0=0, select bank0
   947     07F6  1303               	bcf	3,6	;RP1=0, select bank0
   948     07F7  1B86               	btfsc	6,7	;volatile
   949     07F8  2FFA               	goto	u251
   950     07F9  2FFB               	goto	u250
   951     07FA                     u251:
   952     07FA  2FF5               	goto	l77
   953     07FB                     u250:
   954     07FB                     l80:
   955     07FB  0008               	return
   956     07FC                     __end_of_keypad:
   957                           
   958                           	psect	text5
   959     069F                     __ptext5:	
   960 ;; *************** function _lcd_data *****************
   961 ;; Defined at:
   962 ;;		line 39 in file "banphim.c"
   963 ;; Parameters:    Size  Location     Type
   964 ;;  data            1    wreg     unsigned char 
   965 ;; Auto vars:     Size  Location     Type
   966 ;;  data            1    2[COMMON] unsigned char 
   967 ;; Return value:  Size  Location     Type
   968 ;;                  1    wreg      void 
   969 ;; Registers used:
   970 ;;		wreg
   971 ;; Tracked objects:
   972 ;;		On entry : 0/0
   973 ;;		On exit  : 0/0
   974 ;;		Unchanged: 0/0
   975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   976 ;;      Params:         0       0       0       0       0
   977 ;;      Locals:         1       0       0       0       0
   978 ;;      Temps:          2       0       0       0       0
   979 ;;      Totals:         3       0       0       0       0
   980 ;;Total ram usage:        3 bytes
   981 ;; Hardware stack levels used: 1
   982 ;; This function calls:
   983 ;;		Nothing
   984 ;; This function is called by:
   985 ;;		_lcd_string
   986 ;;		_keypad
   987 ;; This function uses a non-reentrant model
   988 ;;
   989                           
   990     069F                     _lcd_data:	
   991                           ;psect for function _lcd_data
   992                           
   993                           
   994                           ;incstack = 0
   995                           ; Regs used in _lcd_data: [wreg]
   996                           ;lcd_data@data stored from wreg
   997     069F  00F2               	movwf	lcd_data@data
   998     06A0                     l632:
   999                           
  1000                           ;banphim.c: 39: void lcd_data(unsigned char data);banphim.c: 40: {;banphim.c: 41:     PO
      +                          RTC = data;
  1001     06A0  0872               	movf	lcd_data@data,w
  1002     06A1  1283               	bcf	3,5	;RP0=0, select bank0
  1003     06A2  1303               	bcf	3,6	;RP1=0, select bank0
  1004     06A3  0087               	movwf	7	;volatile
  1005     06A4                     l634:
  1006                           
  1007                           ;banphim.c: 42:     PORTDbits.RD0 = 1;
  1008     06A4  1408               	bsf	8,0	;volatile
  1009     06A5                     l636:
  1010                           
  1011                           ;banphim.c: 43:     PORTDbits.RD1 = 0;
  1012     06A5  1088               	bcf	8,1	;volatile
  1013     06A6                     l638:
  1014                           
  1015                           ;banphim.c: 44:     PORTDbits.RD2 = 1;
  1016     06A6  1508               	bsf	8,2	;volatile
  1017                           
  1018                           ;banphim.c: 45:     _delay((unsigned long)((5)*(20000000/4000.0)));
  1019     06A7  3021               	movlw	33
  1020     06A8  00F1               	movwf	??_lcd_data+1
  1021     06A9  3076               	movlw	118
  1022     06AA  00F0               	movwf	??_lcd_data
  1023     06AB                     u297:
  1024     06AB  0BF0               	decfsz	??_lcd_data,f
  1025     06AC  2EAB               	goto	u297
  1026     06AD  0BF1               	decfsz	??_lcd_data+1,f
  1027     06AE  2EAB               	goto	u297
  1028     06AF  0000               	nop
  1029     06B0                     l640:
  1030                           
  1031                           ;banphim.c: 46:     PORTDbits.RD2 = 0;
  1032     06B0  1283               	bcf	3,5	;RP0=0, select bank0
  1033     06B1  1303               	bcf	3,6	;RP1=0, select bank0
  1034     06B2  1108               	bcf	8,2	;volatile
  1035     06B3                     l17:
  1036     06B3  0008               	return
  1037     06B4                     __end_of_lcd_data:
  1038     007E                     btemp	set	126	;btemp
  1039     007E                     wtemp0	set	126
  1040                           
  1041                           	psect	config
  1042                           
  1043                           ;Config register CONFIG @ 0x2007
  1044                           ;	Oscillator Selection bits
  1045                           ;	FOSC = HS, HS oscillator
  1046                           ;	Watchdog Timer Enable bit
  1047                           ;	WDTE = OFF, WDT disabled
  1048                           ;	Power-up Timer Enable bit
  1049                           ;	PWRTE = OFF, PWRT disabled
  1050                           ;	Brown-out Reset Enable bit
  1051                           ;	BOREN = OFF, BOR disabled
  1052                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1053                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  1054                           ;	Data EEPROM Memory Code Protection bit
  1055                           ;	CPD = OFF, Data EEPROM code protection off
  1056                           ;	Flash Program Memory Write Enable bits
  1057                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1058                           ;	In-Circuit Debugger Mode bit
  1059                           ;	DEBUG = 0x1, unprogrammed default
  1060                           ;	Flash Program Memory Code Protection bit
  1061                           ;	CP = OFF, Code protection off
  1062     2007                     	org	8199
  1063     2007  3FBA               	dw	16314

Data Sizes:
    Strings     8
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_string@str	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_1(CODE[8]), 


Critical Paths under _main in COMMON

    _main->_lcd_initialise
    _lcd_string->_lcd_data
    _lcd_initialise->_lcd_command
    _keypad->_lcd_data

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     138
                             _keypad
                        _lcd_command
                     _lcd_initialise
                         _lcd_string
 ---------------------------------------------------------------------------------
 (1) _lcd_string                                           1     1      0      93
                                              3 COMMON     1     1      0
                           _lcd_data
 ---------------------------------------------------------------------------------
 (1) _lcd_initialise                                       2     2      0      15
                                              3 COMMON     2     2      0
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _lcd_command                                          3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _keypad                                               0     0      0      15
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _keypad
     _lcd_data
   _lcd_command
   _lcd_initialise
     _lcd_command
   _lcd_string
     _lcd_data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sun Aug 18 11:49:02 2024

                      pc 0002             lcd_data@data 0072                       l20 06C8  
                     l40 0765                       l32 0745                       l17 06B3  
                     l41 075F                       l33 073F                       l26 06E7  
                     l60 07B8                       l52 0798                       l44 0775  
                     l36 0755                       l61 07B2                       l53 0792  
                     l45 076F                       l37 074F                       l29 0709  
                     l80 07FB                       l72 07EB                       l64 07CB  
                     l56 07A8                       l48 0788                       l73 07E5  
                     l65 07C5                       l57 07A2                       l49 0782  
                     l68 07DB                       l77 07F5                       l69 07D5  
                     u20 0739                       u21 0738                       u30 0745  
                     u31 0744                       u40 0749                       u41 0748  
                     u50 0755                       u51 0754                       u60 0759  
                     u61 0758                       u70 0765                       u71 0764  
                     u80 0769                       u81 0768                       u90 0775  
                     u91 0774                       fsr 0004                      l710 06DB  
                    l640 06B0                      l632 06A0                      l704 06CA  
                    l720 071B                      l712 070A                      l634 06A4  
                    l650 06C5                      l642 06B5                      l706 06CB  
                    l722 0721                      l714 070E                      l636 06A5  
                    l644 06B9                      l660 06E8                      l708 06D7  
                    l724 0727                      l716 0710                      l638 06A6  
                    l670 0759                      l646 06BA                      l662 0700  
                    l718 0715                      l680 07AC                      l672 0769  
                    l664 0730                      l648 06BB                      l682 07BF  
                    l674 077C                      l666 0739                      l684 07CF  
                    l676 078C                      l668 0749                      l686 07DF  
                    l678 079C                      l688 07EF                      u100 077C  
                    u101 077B                      u110 0788                      u111 0787  
                    u200 07CF                      u120 078C                      u201 07CE  
                    u121 078B                      u210 07DB                      u130 0798  
                    u211 07DA                      u131 0797                      u220 07DF  
                    u140 079C                      u221 07DE                      u141 079B  
                    u230 07EB                      u150 07A8                      u231 07EA  
                    u151 07A7                      u240 07EF                      u160 07AC  
                    u241 07EE                      u161 07AB                      u250 07FB  
                    u170 07B8                      u251 07FA                      u171 07B7  
                    u180 07BF                      u260 06E7                      u181 07BE  
                    u261 06E6                      u190 07CB                      u191 07CA  
                    u277 0704                      u287 06C0                      u297 06AB  
                    fsr0 0004                     STR_1 0009                     _main 070A  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _PORTC 0007                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 0730  
                 ??_main 0075           lcd_command@cmd 0072         __end_of_lcd_data 06B4  
                 _keypad 0730         ??_lcd_initialise 0073            lcd_string@str 0073  
__end_of__initialization 07FC           __pcstackCOMMON 0070               __pmaintext 070A  
                ?_keypad 0070                ?_lcd_data 0070               _lcd_string 06C9  
             __stringtab 0003                  __ptext1 06C9                  __ptext2 06E8  
                __ptext3 06B4                  __ptext4 0730                  __ptext5 069F  
             ??_lcd_data 0070     end_of_initialization 07FC                _PORTBbits 0006  
              _PORTDbits 0008              ?_lcd_string 0070            ??_lcd_command 0070  
         __end_of_keypad 07FC      start_initialization 07FC      __end_of_lcd_command 06C9  
               ??_keypad 0073                ___latbits 0002                __pstrings 0003  
            _lcd_command 06B4              __stringbase 0008             ??_lcd_string 0073  
     __end_of_lcd_string 06E8       __end_of__stringtab 0009                 _lcd_data 069F  
         _lcd_initialise 06E8   __end_of_lcd_initialise 070A                stringcode 0003  
               stringdir 0003                 stringtab 0003          ?_lcd_initialise 0070  
           ?_lcd_command 0070  
